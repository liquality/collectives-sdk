/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../../common";
import type {
  TransparentProxy,
  TransparentProxyInterface,
} from "../../../../contracts/external/TransparentProxy.sol/TransparentProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "ERC1967InvalidAdmin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProxyDeniedAdminAccess",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405260405162001bc238038062001bc28339818101604052810190620000299190620007b6565b8282828281620000408282620000da60201b60201c565b5050816040516200005190620005b0565b6200005d919062000842565b604051809103906000f0801580156200007a573d6000803e3d6000fd5b5073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620000ce620000c26200016760201b60201c565b6200017160201b60201c565b505050505050620008f2565b620000eb82620001cf60201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a260008151111562000152576200014b8282620002a760201b60201c565b5062000163565b620001626200033760201b60201c565b5b5050565b6000608051905090565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620001a26200037560201b60201c565b82604051620001b39291906200085f565b60405180910390a1620001cc81620003d460201b60201c565b50565b60008173ffffffffffffffffffffffffffffffffffffffff163b036200022e57806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040162000225919062000842565b60405180910390fd5b80620002637f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b620004c260201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051620002d39190620008d9565b600060405180830381855af49150503d806000811462000310576040519150601f19603f3d011682016040523d82523d6000602084013e62000315565b606091505b50915091506200032d858383620004cc60201b60201c565b9250505092915050565b600034111562000373576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000620003ab7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b620004c260201b60201c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620004495760006040517f62e77ba200000000000000000000000000000000000000000000000000000000815260040162000440919062000842565b60405180910390fd5b806200047e7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b620004c260201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000819050919050565b606082620004eb57620004e5826200056a60201b60201c565b62000562565b6000825114801562000514575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156200055957836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040162000550919062000842565b60405180910390fd5b81905062000563565b5b9392505050565b6000815111156200057e5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a2b806200119783390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005ff82620005d2565b9050919050565b6200061181620005f2565b81146200061d57600080fd5b50565b600081519050620006318162000606565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200068c8262000641565b810181811067ffffffffffffffff82111715620006ae57620006ad62000652565b5b80604052505050565b6000620006c3620005be565b9050620006d1828262000681565b919050565b600067ffffffffffffffff821115620006f457620006f362000652565b5b620006ff8262000641565b9050602081019050919050565b60005b838110156200072c5780820151818401526020810190506200070f565b60008484015250505050565b60006200074f6200074984620006d6565b620006b7565b9050828152602081018484840111156200076e576200076d6200063c565b5b6200077b8482856200070c565b509392505050565b600082601f8301126200079b576200079a62000637565b5b8151620007ad84826020860162000738565b91505092915050565b600080600060608486031215620007d257620007d1620005c8565b5b6000620007e28682870162000620565b9350506020620007f58682870162000620565b925050604084015167ffffffffffffffff811115620008195762000818620005cd565b5b620008278682870162000783565b9150509250925092565b6200083c81620005f2565b82525050565b600060208201905062000859600083018462000831565b92915050565b600060408201905062000876600083018562000831565b62000885602083018462000831565b9392505050565b600081519050919050565b600081905092915050565b6000620008af826200088c565b620008bb818562000897565b9350620008cd8185602086016200070c565b80840191505092915050565b6000620008e78284620008a2565b915081905092915050565b6080516108896200090e600039600061015f01526108896000f3fe6080604052600436106100225760003560e01c80638b3240a01461002d57610023565b5b61002b610058565b005b34801561003957600080fd5b5061004261014c565b60405161004f9190610577565b60405180910390f35b61006061015b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361014157634f1ef28660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610134576040517fd2b576ec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61013c610183565b61014a565b6101496101b9565b5b565b600061015661015b565b905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600080600036600490809261019a939291906105a6565b8101906101a7919061076f565b915091506101b582826101cb565b5050565b6101c96101c461023e565b61024d565b565b6101d482610273565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156102315761022b8282610340565b5061023a565b6102396103c4565b5b5050565b6000610248610401565b905090565b3660008037600080366000845af43d6000803e806000811461026e573d6000f35b3d6000fd5b60008173ffffffffffffffffffffffffffffffffffffffff163b036102cf57806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016102c69190610577565b60405180910390fd5b806102fc7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610458565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161036a919061083c565b600060405180830381855af49150503d80600081146103a5576040519150601f19603f3d011682016040523d82523d6000602084013e6103aa565b606091505b50915091506103ba858383610462565b9250505092915050565b60003411156103ff576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600061042f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610458565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000819050919050565b60608261047757610472826104f1565b6104e9565b6000825114801561049f575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156104e157836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016104d89190610577565b60405180910390fd5b8190506104ea565b5b9392505050565b6000815111156105045780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061056182610536565b9050919050565b61057181610556565b82525050565b600060208201905061058c6000830184610568565b92915050565b6000604051905090565b600080fd5b600080fd5b600080858511156105ba576105b961059c565b5b838611156105cb576105ca6105a1565b5b6001850283019150848603905094509492505050565b600080fd5b600080fd5b60006105f682610536565b9050919050565b610606816105eb565b811461061157600080fd5b50565b600081359050610623816105fd565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61067c82610633565b810181811067ffffffffffffffff8211171561069b5761069a610644565b5b80604052505050565b60006106ae610592565b90506106ba8282610673565b919050565b600067ffffffffffffffff8211156106da576106d9610644565b5b6106e382610633565b9050602081019050919050565b82818337600083830152505050565b600061071261070d846106bf565b6106a4565b90508281526020810184848401111561072e5761072d61062e565b5b6107398482856106f0565b509392505050565b600082601f83011261075657610755610629565b5b81356107668482602086016106ff565b91505092915050565b60008060408385031215610786576107856105e1565b5b600061079485828601610614565b925050602083013567ffffffffffffffff8111156107b5576107b46105e6565b5b6107c185828601610741565b9150509250929050565b600081519050919050565b600081905092915050565b60005b838110156107ff5780820151818401526020810190506107e4565b60008484015250505050565b6000610816826107cb565b61082081856107d6565b93506108308185602086016107e1565b80840191505092915050565b6000610848828461080b565b91508190509291505056fea2646970667358221220e3b0513ea1b82b7b125b93d51c97f1aed944197f3b8e80b26b44e6d4af14312864736f6c63430008140033608060405234801561001057600080fd5b50604051610a2b380380610a2b833981810160405281019061003291906101e2565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c919061021e565b60405180910390fd5b6100b4816100bb60201b60201c565b5050610239565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101af82610184565b9050919050565b6101bf816101a4565b81146101ca57600080fd5b50565b6000815190506101dc816101b6565b92915050565b6000602082840312156101f8576101f761017f565b5b6000610206848285016101cd565b91505092915050565b610218816101a4565b82525050565b6000602082019050610233600083018461020f565b92915050565b6107e3806102486000396000f3fe60806040526004361061004a5760003560e01c8063715018a61461004f5780638da5cb5b146100665780639623609d14610091578063ad3cb1cc146100ad578063f2fde38b146100d8575b600080fd5b34801561005b57600080fd5b50610064610101565b005b34801561007257600080fd5b5061007b610115565b604051610088919061040c565b60405180910390f35b6100ab60048036038101906100a691906105eb565b61013e565b005b3480156100b957600080fd5b506100c26101b9565b6040516100cf91906106d9565b60405180910390f35b3480156100e457600080fd5b506100ff60048036038101906100fa91906106fb565b6101f2565b005b610109610278565b61011360006102ff565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610146610278565b8273ffffffffffffffffffffffffffffffffffffffff16634f1ef2863484846040518463ffffffff1660e01b815260040161018292919061077d565b6000604051808303818588803b15801561019b57600080fd5b505af11580156101af573d6000803e3d6000fd5b5050505050505050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6101fa610278565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361026c5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610263919061040c565b60405180910390fd5b610275816102ff565b50565b6102806103c3565b73ffffffffffffffffffffffffffffffffffffffff1661029e610115565b73ffffffffffffffffffffffffffffffffffffffff16146102fd576102c16103c3565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102f4919061040c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103f6826103cb565b9050919050565b610406816103eb565b82525050565b600060208201905061042160008301846103fd565b92915050565b6000604051905090565b600080fd5b600080fd5b6000610446826103eb565b9050919050565b6104568161043b565b811461046157600080fd5b50565b6000813590506104738161044d565b92915050565b610482816103eb565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104f8826104af565b810181811067ffffffffffffffff82111715610517576105166104c0565b5b80604052505050565b600061052a610427565b905061053682826104ef565b919050565b600067ffffffffffffffff821115610556576105556104c0565b5b61055f826104af565b9050602081019050919050565b82818337600083830152505050565b600061058e6105898461053b565b610520565b9050828152602081018484840111156105aa576105a96104aa565b5b6105b584828561056c565b509392505050565b600082601f8301126105d2576105d16104a5565b5b81356105e284826020860161057b565b91505092915050565b60008060006060848603121561060457610603610431565b5b600061061286828701610464565b935050602061062386828701610490565b925050604084013567ffffffffffffffff81111561064457610643610436565b5b610650868287016105bd565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015610694578082015181840152602081019050610679565b60008484015250505050565b60006106ab8261065a565b6106b58185610665565b93506106c5818560208601610676565b6106ce816104af565b840191505092915050565b600060208201905081810360008301526106f381846106a0565b905092915050565b60006020828403121561071157610710610431565b5b600061071f84828501610490565b91505092915050565b600081519050919050565b600082825260208201905092915050565b600061074f82610728565b6107598185610733565b9350610769818560208601610676565b610772816104af565b840191505092915050565b600060408201905061079260008301856103fd565b81810360208301526107a48184610744565b9050939250505056fea2646970667358221220ce03d6a49a638b6df6e4fec13339bd23f9083826fc759893af0129c196fa3cd564736f6c63430008140033";

type TransparentProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransparentProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransparentProxy__factory extends ContractFactory {
  constructor(...args: TransparentProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _logic: AddressLike,
    initialOwner: AddressLike,
    _data: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _logic,
      initialOwner,
      _data,
      overrides || {}
    );
  }
  override deploy(
    _logic: AddressLike,
    initialOwner: AddressLike,
    _data: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _logic,
      initialOwner,
      _data,
      overrides || {}
    ) as Promise<
      TransparentProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TransparentProxy__factory {
    return super.connect(runner) as TransparentProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransparentProxyInterface {
    return new Interface(_abi) as TransparentProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TransparentProxy {
    return new Contract(address, _abi, runner) as unknown as TransparentProxy;
  }
}
