/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Raffle,
  RaffleInterface,
} from "../../../contracts/customEscrow/Raffle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vrfWrapper",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "FailedToSendPrize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_participants",
        type: "address[]",
      },
    ],
    name: "enterRaffle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "entered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getParticipants",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "linkToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "raffleWinner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sendPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_callbackGasLimit",
        type: "uint32",
      },
    ],
    name: "startDraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001c5638038062001c56833981810160405281019062000037919062000197565b81818173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001de565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200015f8262000132565b9050919050565b620001718162000152565b81146200017d57600080fd5b50565b600081519050620001918162000166565b92915050565b60008060408385031215620001b157620001b06200012d565b5b6000620001c18582860162000180565b9250506020620001d48582860162000180565b9150509250929050565b60805160a051611a3d620002196000396000818161029d01528181610c0e01528181610c2f0152610d4f01526000610bd20152611a3d6000f3fe6080604052600436106100a05760003560e01c806350fc41601161006457806350fc4160146101a357806357970e93146101ce5780635aa68ac0146101f95780636ce3fc06146102245780638dc654a21461023b578063e1a0f7e714610252576100a7565b806317b299aa146100ac5780631fe543e3146100e9578063209668091461011257806335c1d3491461013b57806342619f6614610178576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610e57565b61027b565b6040516100e09190610e9f565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190611049565b61029b565b005b34801561011e57600080fd5b50610139600480360381019061013491906110e1565b610337565b005b34801561014757600080fd5b50610162600480360381019061015d919061110e565b61039a565b60405161016f919061114a565b60405180910390f35b34801561018457600080fd5b5061018d6103d9565b60405161019a9190611174565b60405180910390f35b3480156101af57600080fd5b506101b86103df565b6040516101c5919061114a565b60405180910390f35b3480156101da57600080fd5b506101e3610409565b6040516101f0919061114a565b60405180910390f35b34801561020557600080fd5b5061020e61042f565b60405161021b919061124d565b60405180910390f35b34801561023057600080fd5b506102396104bd565b005b34801561024757600080fd5b50610250610643565b005b34801561025e57600080fd5b50610279600480360381019061027491906112ca565b610855565b005b60036020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032090611374565b60405180910390fd5b6103338282610ad3565b5050565b600080805490501161037e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610375906113e0565b60405180910390fd5b61039181600460ff16600160ff16610bce565b60068190555050565b600081815481106103aa57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060008054806020026020016040519081016040528092919081815260200182805480156104b357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610469575b5050505050905090565b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361054e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105459061144c565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516105969061149d565b60006040518083038185875af1925050503d80600081146105d3576040519150601f19603f3d011682016040523d82523d6000602084013e6105d8565b606091505b505090508061064057600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f4d4829b00000000000000000000000000000000000000000000000000000000081526004016106379190611511565b60405180910390fd5b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ca90611578565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610772919061114a565b602060405180830381865afa15801561078f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b391906115ad565b6040518363ffffffff1660e01b81526004016107d09291906115da565b6020604051808303816000875af11580156107ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610813919061162f565b610852576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610849906116ce565b60405180910390fd5b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dc90611578565b60405180910390fd5b6000828290501161092b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109229061173a565b60405180910390fd5b60005b82829050811015610ace57600360008484848181106109505761094f61175a565b5b90506020020160208101906109659190610e57565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610abb5760008383838181106109c6576109c561175a565b5b90506020020160208101906109db9190610e57565b9080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160036000858585818110610a5457610a5361175a565b5b9050602002016020810190610a699190610e57565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8080610ac6906117b8565b91505061092e565b505050565b8160065414610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e9061184c565b60405180910390fd5b60008054905081600081518110610b3157610b3061175a565b5b6020026020010151610b43919061189b565b600181905550600060015481548110610b5f57610b5e61175a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634306d354886040518263ffffffff1660e01b8152600401610c8691906118db565b602060405180830381865afa158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906115ad565b878787604051602001610cdc93929190611913565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610d09939291906119c9565b6020604051808303816000875af1158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c919061162f565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663fc2a88c36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddc91906115ad565b90509392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2482610df9565b9050919050565b610e3481610e19565b8114610e3f57600080fd5b50565b600081359050610e5181610e2b565b92915050565b600060208284031215610e6d57610e6c610def565b5b6000610e7b84828501610e42565b91505092915050565b60008115159050919050565b610e9981610e84565b82525050565b6000602082019050610eb46000830184610e90565b92915050565b6000819050919050565b610ecd81610eba565b8114610ed857600080fd5b50565b600081359050610eea81610ec4565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f3e82610ef5565b810181811067ffffffffffffffff82111715610f5d57610f5c610f06565b5b80604052505050565b6000610f70610de5565b9050610f7c8282610f35565b919050565b600067ffffffffffffffff821115610f9c57610f9b610f06565b5b602082029050602081019050919050565b600080fd5b6000610fc5610fc084610f81565b610f66565b90508083825260208201905060208402830185811115610fe857610fe7610fad565b5b835b818110156110115780610ffd8882610edb565b845260208401935050602081019050610fea565b5050509392505050565b600082601f8301126110305761102f610ef0565b5b8135611040848260208601610fb2565b91505092915050565b600080604083850312156110605761105f610def565b5b600061106e85828601610edb565b925050602083013567ffffffffffffffff81111561108f5761108e610df4565b5b61109b8582860161101b565b9150509250929050565b600063ffffffff82169050919050565b6110be816110a5565b81146110c957600080fd5b50565b6000813590506110db816110b5565b92915050565b6000602082840312156110f7576110f6610def565b5b6000611105848285016110cc565b91505092915050565b60006020828403121561112457611123610def565b5b600061113284828501610edb565b91505092915050565b61114481610e19565b82525050565b600060208201905061115f600083018461113b565b92915050565b61116e81610eba565b82525050565b60006020820190506111896000830184611165565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6111c481610e19565b82525050565b60006111d683836111bb565b60208301905092915050565b6000602082019050919050565b60006111fa8261118f565b611204818561119a565b935061120f836111ab565b8060005b8381101561124057815161122788826111ca565b9750611232836111e2565b925050600181019050611213565b5085935050505092915050565b6000602082019050818103600083015261126781846111ef565b905092915050565b600080fd5b60008083601f84011261128a57611289610ef0565b5b8235905067ffffffffffffffff8111156112a7576112a661126f565b5b6020830191508360208202830111156112c3576112c2610fad565b5b9250929050565b600080602083850312156112e1576112e0610def565b5b600083013567ffffffffffffffff8111156112ff576112fe610df4565b5b61130b85828601611274565b92509250509250929050565b600082825260208201905092915050565b7f6f6e6c792056524620563220777261707065722063616e2066756c66696c6c00600082015250565b600061135e601f83611317565b915061136982611328565b602082019050919050565b6000602082019050818103600083015261138d81611351565b9050919050565b7f4e6f207061727469636970616e74730000000000000000000000000000000000600082015250565b60006113ca600f83611317565b91506113d582611394565b602082019050919050565b600060208201905081810360008301526113f9816113bd565b9050919050565b7f4e6f2077696e6e65720000000000000000000000000000000000000000000000600082015250565b6000611436600983611317565b915061144182611400565b602082019050919050565b6000602082019050818103600083015261146581611429565b9050919050565b600081905092915050565b50565b600061148760008361146c565b915061149282611477565b600082019050919050565b60006114a88261147a565b9150819050919050565b6000819050919050565b60006114d76114d26114cd84610df9565b6114b2565b610df9565b9050919050565b60006114e9826114bc565b9050919050565b60006114fb826114de565b9050919050565b61150b816114f0565b82525050565b60006020820190506115266000830184611502565b92915050565b7f4f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b6000611562600a83611317565b915061156d8261152c565b602082019050919050565b6000602082019050818103600083015261159181611555565b9050919050565b6000815190506115a781610ec4565b92915050565b6000602082840312156115c3576115c2610def565b5b60006115d184828501611598565b91505092915050565b60006040820190506115ef600083018561113b565b6115fc6020830184611165565b9392505050565b61160c81610e84565b811461161757600080fd5b50565b60008151905061162981611603565b92915050565b60006020828403121561164557611644610def565b5b60006116538482850161161a565b91505092915050565b7f556e61626c6520746f207472616e736665722072656d61696e696e67204c494e60008201527f4b20746f2061646d696e00000000000000000000000000000000000000000000602082015250565b60006116b8602a83611317565b91506116c38261165c565b604082019050919050565b600060208201905081810360008301526116e7816116ab565b9050919050565b7f506c6561736520656e7465722076616c69642061646472657373657300000000600082015250565b6000611724601c83611317565b915061172f826116ee565b602082019050919050565b6000602082019050818103600083015261175381611717565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117c382610eba565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117f5576117f4611789565b5b600182019050919050565b7f496e76616c696420726571756573740000000000000000000000000000000000600082015250565b6000611836600f83611317565b915061184182611800565b602082019050919050565b6000602082019050818103600083015261186581611829565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006118a682610eba565b91506118b183610eba565b9250826118c1576118c061186c565b5b828206905092915050565b6118d5816110a5565b82525050565b60006020820190506118f060008301846118cc565b92915050565b600061ffff82169050919050565b61190d816118f6565b82525050565b600060608201905061192860008301866118cc565b6119356020830185611904565b61194260408301846118cc565b949350505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611984578082015181840152602081019050611969565b60008484015250505050565b600061199b8261194a565b6119a58185611955565b93506119b5818560208601611966565b6119be81610ef5565b840191505092915050565b60006060820190506119de600083018661113b565b6119eb6020830185611165565b81810360408301526119fd8184611990565b905094935050505056fea2646970667358221220aa459d6f08f0f4158fe75d1b04424fcefa08da6353e60bf69e3e1f7ed456fc4064736f6c63430008140033";

type RaffleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RaffleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Raffle__factory extends ContractFactory {
  constructor(...args: RaffleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _linkToken: AddressLike,
    _vrfWrapper: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_linkToken, _vrfWrapper, overrides || {});
  }
  override deploy(
    _linkToken: AddressLike,
    _vrfWrapper: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_linkToken, _vrfWrapper, overrides || {}) as Promise<
      Raffle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Raffle__factory {
    return super.connect(runner) as Raffle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RaffleInterface {
    return new Interface(_abi) as RaffleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Raffle {
    return new Contract(address, _abi, runner) as unknown as Raffle;
  }
}
