/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  NewCWallet,
  NewCWalletInterface,
} from "../../../../contracts/mock/MockCWallet.sol/NewCWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CWallet__FailedToReceiveReward",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CWallet__FailedToWithdrawFunds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "CWallet__OnlyEntrypoint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "CWallet__OnlyOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "CWallet__OnlyWhitelistedTargets",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collective",
        type: "address",
      },
    ],
    name: "CollectiveWalletInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "NewSigner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "OperatorRenounced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address[]",
        name: "target",
        type: "address[]",
      },
    ],
    name: "TargetsBlacklisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address[]",
        name: "target",
        type: "address[]",
      },
    ],
    name: "TargetsWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "theTargets",
        type: "address[]",
      },
    ],
    name: "blacklistTargets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collective",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "theCollective",
        type: "address",
      },
      {
        internalType: "address",
        name: "theOperator",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "theTargets",
        type: "address[]",
      },
    ],
    name: "whitelistTargets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedTargets",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b5060405162003bb038038062003bb083398181016040528101906200006a919062000265565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050620000ae620000b560201b60201c565b50620002d9565b6000620000c7620001bf60201b60201c565b90508060000160089054906101000a900460ff161562000113576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614620001bc5767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051620001b39190620002bc565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021982620001ec565b9050919050565b60006200022d826200020c565b9050919050565b6200023f8162000220565b81146200024b57600080fd5b50565b6000815190506200025f8162000234565b92915050565b6000602082840312156200027e576200027d620001e7565b5b60006200028e848285016200024e565b91505092915050565b600067ffffffffffffffff82169050919050565b620002b68162000297565b82525050565b6000602082019050620002d36000830184620002ab565b92915050565b60805160a05161389c62000314600039600081816113980152611b51015260008181611c4b01528181611ca00152611e5b015261389c6000f3fe6080604052600436106101435760003560e01c80634d44560d116100b6578063b61d27f61161006f578063b61d27f6146105aa578063bc197c81146105d3578063c399ec8814610610578063d087d2881461063b578063f23a6e6114610666578063fb9ed257146106a3576102d2565b80634d44560d146104b95780634f1ef286146104e257806352d1902d146104fe578063570ca73514610529578063ad3cb1cc14610554578063b0d691fe1461057f576102d2565b8063150b7a0211610108578063150b7a02146103ba5780632a0a2105146103f75780633a871cdd1461042057806347e1da2a1461045d578063485cc955146104865780634a58db19146104af576102d2565b806223de29146102d757806301ffc9a7146103005780630479734f1461033d57806307b18bde14610368578063135c327714610391576102d2565b366102d257600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102d05760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630442722834336040518363ffffffff1660e01b81526004016101f7919061256d565b60206040518083038185885af1158015610215573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061023a91906125d4565b9050806102805733346040517fed7f7bd900000000000000000000000000000000000000000000000000000000815260040161027792919061261a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f9ac954606f877c9c9e6deec30e9265abff5a57c7123a34777ca9321eb6c26d8e346040516102c69190612643565b60405180910390a2505b005b600080fd5b3480156102e357600080fd5b506102fe60048036038101906102f9919061271b565b6106e0565b005b34801561030c57600080fd5b5061032760048036038101906103229190612842565b6106ea565b604051610334919061287e565b60405180910390f35b34801561034957600080fd5b50610352610824565b60405161035f919061256d565b60405180910390f35b34801561037457600080fd5b5061038f600480360381019061038a91906128d7565b610848565b005b34801561039d57600080fd5b506103b860048036038101906103b3919061296d565b610973565b005b3480156103c657600080fd5b506103e160048036038101906103dc91906129ba565b610a64565b6040516103ee9190612a51565b60405180910390f35b34801561040357600080fd5b5061041e6004803603810190610419919061296d565b610a79565b005b34801561042c57600080fd5b5061044760048036038101906104429190612ac7565b610b6a565b6040516104549190612643565b60405180910390f35b34801561046957600080fd5b50610484600480360381019061047f9190612be2565b610b9d565b005b34801561049257600080fd5b506104ad60048036038101906104a89190612c96565b6110b1565b005b6104b76111ee565b005b3480156104c557600080fd5b506104e060048036038101906104db91906128d7565b611263565b005b6104fc60048036038101906104f79190612e17565b6112e3565b005b34801561050a57600080fd5b50610513611302565b6040516105209190612e82565b60405180910390f35b34801561053557600080fd5b5061053e611335565b60405161054b919061256d565b60405180910390f35b34801561056057600080fd5b5061056961135b565b6040516105769190612f1c565b60405180910390f35b34801561058b57600080fd5b50610594611394565b6040516105a19190612f9d565b60405180910390f35b3480156105b657600080fd5b506105d160048036038101906105cc9190612fb8565b6113bc565b005b3480156105df57600080fd5b506105fa60048036038101906105f5919061302c565b611513565b6040516106079190612a51565b60405180910390f35b34801561061c57600080fd5b5061062561152b565b6040516106329190612643565b60405180910390f35b34801561064757600080fd5b506106506115b3565b60405161065d9190612643565b60405180910390f35b34801561067257600080fd5b5061068d60048036038101906106889190613108565b61163e565b60405161069a9190612a51565b60405180910390f35b3480156106af57600080fd5b506106ca60048036038101906106c591906131a2565b611654565b6040516106d7919061287e565b60405180910390f35b5050505050505050565b60007f150b7a02000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806107b557507f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061081d57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610850611674565b60008273ffffffffffffffffffffffffffffffffffffffff168260405161087690613200565b60006040518083038185875af1925050503d80600081146108b3576040519150601f19603f3d011682016040523d82523d6000602084013e6108b8565b606091505b50509050806109005782826040517f99e5912a0000000000000000000000000000000000000000000000000000000081526004016108f7929190613236565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d836040516109669190612643565b60405180910390a2505050565b61097b611674565b60005b82829050811015610a1b576001600360008585858181106109a2576109a161325f565b5b90506020020160208101906109b791906131a2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610a13906132bd565b91505061097e565b508181604051610a2c9291906133c2565b60405180910390207f56b91e0524099eb6ecff1dfcd9b503c7b2ba7b87a189bc510f3f1b03387c43ae60405160405180910390a25050565b600063150b7a0260e01b905095945050505050565b610a81611674565b60005b82829050811015610b2157600060036000858585818110610aa857610aa761325f565b5b9050602002016020810190610abd91906131a2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610b19906132bd565b915050610a84565b508181604051610b329291906133c2565b60405180910390207f7df73dac711235836cc85d538f3b30d551b2859d7bd04759d023e9ac167432fe60405160405180910390a25050565b6000610b74611704565b610b7e848461177b565b9050610b8d8460200135611883565b610b9682611886565b9392505050565b610ba5611704565b8181905086869050148015610bcd57506000848490501480610bcc57508181905084849050145b5b610c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0390613427565b60405180910390fd5b60008484905003610e295760005b86869050811015610e2357610c55878783818110610c3b57610c3a61325f565b5b9050602002016020810190610c5091906131a2565b611922565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16878783818110610c9f57610c9e61325f565b5b9050602002016020810190610cb491906131a2565b73ffffffffffffffffffffffffffffffffffffffff1603610d75576000838383818110610ce457610ce361325f565b5b9050602002810190610cf69190613456565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051602001610d2b939291906134f7565b6040516020818303038152906040529050610d6f888884818110610d5257610d5161325f565b5b9050602002016020810190610d6791906131a2565b6000836119b3565b50610e10565b610e0f878783818110610d8b57610d8a61325f565b5b9050602002016020810190610da091906131a2565b6000858585818110610db557610db461325f565b5b9050602002810190610dc79190613456565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506119b3565b5b8080610e1b906132bd565b915050610c1a565b50611067565b60005b8686905081101561106557610e67878783818110610e4d57610e4c61325f565b5b9050602002016020810190610e6291906131a2565b611922565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16878783818110610eb157610eb061325f565b5b9050602002016020810190610ec691906131a2565b73ffffffffffffffffffffffffffffffffffffffff1603610f9f576000838383818110610ef657610ef561325f565b5b9050602002810190610f089190613456565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051602001610f3d939291906134f7565b6040516020818303038152906040529050610f99888884818110610f6457610f6361325f565b5b9050602002016020810190610f7991906131a2565b878785818110610f8c57610f8b61325f565b5b90506020020135836119b3565b50611052565b611051878783818110610fb557610fb461325f565b5b9050602002016020810190610fca91906131a2565b868684818110610fdd57610fdc61325f565b5b90506020020135858585818110610ff757610ff661325f565b5b90506020028101906110099190613456565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506119b3565b5b808061105d906132bd565b915050610e2c565b505b6000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050565b600260ff1660006110c0611a37565b90508060000160089054906101000a900460ff168061110b57508167ffffffffffffffff168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1610155b15611142576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060018160000160086101000a81548160ff0219169083151502179055506111948484611a5f565b60008160000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2826040516111e0919061354c565b60405180910390a150505050565b6111f6611394565b73ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b815260040161122f919061256d565b6000604051808303818588803b15801561124857600080fd5b505af115801561125c573d6000803e3d6000fd5b5050505050565b61126b611bb6565b611273611394565b73ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b81526004016112ad929190613576565b600060405180830381600087803b1580156112c757600080fd5b505af11580156112db573d6000803e3d6000fd5b505050505050565b6112eb611c49565b6112f482611d2f565b6112fe8282611d3a565b5050565b600061130c611e59565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6113c4611704565b6113cd84611922565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361147b5760008282600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051602001611459939291906134f7565b60405160208183030381529060405290506114758585836119b3565b506114cb565b6114ca848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506119b3565b5b6000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600063bc197c8160e01b905098975050505050505050565b6000611535611394565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161156d919061256d565b602060405180830381865afa15801561158a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ae91906135b4565b905090565b60006115bd611394565b73ffffffffffffffffffffffffffffffffffffffff166335567e1a3060006040518363ffffffff1660e01b81526004016115f8929190613640565b602060405180830381865afa158015611615573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163991906135b4565b905090565b600063f23a6e6160e01b90509695505050505050565b60036020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611702576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f9906136b5565b60405180910390fd5b565b61170c611394565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611779576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177090613721565b60405180910390fd5b565b60008061178783611ee0565b905060006117f18580610140019061179f9190613456565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505083611f1690919063ffffffff16565b905080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fffafe5c39be83f4bcf20d7e1a150f6e21c1858ea0948315ba84b6b1c386d45bb60405160405180910390a260009250505092915050565b50565b6000811461191f5760003373ffffffffffffffffffffffffffffffffffffffff16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff906040516118d690613200565b600060405180830381858888f193505050503d8060008114611914576040519150601f19603f3d011682016040523d82523d6000602084013e611919565b606091505b50509050505b50565b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166119b057806040517fd9f55f130000000000000000000000000000000000000000000000000000000081526004016119a7919061256d565b60405180910390fd5b50565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516119dc919061377d565b60006040518083038185875af1925050503d8060008114611a19576040519150601f19603f3d011682016040523d82523d6000602084013e611a1e565b606091505b509150915081611a3057805160208201fd5b5050505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f053b2c6f4f1999cab424b5c7bdf4f8de8718853469161439091086cc5230fd8760405160405180910390a35050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611c4757336040517e07341c000000000000000000000000000000000000000000000000000000008152600401611c3e919061256d565b60405180910390fd5b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480611cf657507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611cdd611f42565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611d2d576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611d37611bb6565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611da257506040513d601f19601f82011682018060405250810190611d9f91906137a9565b60015b611de357816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611dda919061256d565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114611e4a57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611e419190612e82565b60405180910390fd5b611e548383611f99565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611ede576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080611f26868661200c565b925092509250611f368282612068565b82935050505092915050565b6000611f707f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6121cc565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611fa2826121d6565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115611fff57611ff982826122a3565b50612008565b612007612327565b5b5050565b600080600060418451036120515760008060006020870151925060408701519150606087015160001a905061204388828585612364565b955095509550505050612061565b60006002855160001b9250925092505b9250925092565b6000600381111561207c5761207b6137d6565b5b82600381111561208f5761208e6137d6565b5b03156121c857600160038111156120a9576120a86137d6565b5b8260038111156120bc576120bb6137d6565b5b036120f3576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115612107576121066137d6565b5b82600381111561211a576121196137d6565b5b0361215f578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016121569190612643565b60405180910390fd5b600380811115612172576121716137d6565b5b826003811115612185576121846137d6565b5b036121c757806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016121be9190612e82565b60405180910390fd5b5b5050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361223257806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401612229919061256d565b60405180910390fd5b8061225f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6121cc565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516122cd919061377d565b600060405180830381855af49150503d8060008114612308576040519150601f19603f3d011682016040523d82523d6000602084013e61230d565b606091505b509150915061231d858383612458565b9250505092915050565b6000341115612362576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156123a457600060038592509250925061244e565b6000600188888888604051600081526020016040526040516123c99493929190613821565b6020604051602081039080840390855afa1580156123eb573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361243f57600060016000801b9350935093505061244e565b8060008060001b935093509350505b9450945094915050565b60608261246d57612468826124e7565b6124df565b60008251148015612495575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156124d757836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016124ce919061256d565b60405180910390fd5b8190506124e0565b5b9392505050565b6000815111156124fa5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006125578261252c565b9050919050565b6125678161254c565b82525050565b6000602082019050612582600083018461255e565b92915050565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b6125b18161259c565b81146125bc57600080fd5b50565b6000815190506125ce816125a8565b92915050565b6000602082840312156125ea576125e9612592565b5b60006125f8848285016125bf565b91505092915050565b6000819050919050565b61261481612601565b82525050565b600060408201905061262f600083018561255e565b61263c602083018461260b565b9392505050565b6000602082019050612658600083018461260b565b92915050565b6126678161254c565b811461267257600080fd5b50565b6000813590506126848161265e565b92915050565b61269381612601565b811461269e57600080fd5b50565b6000813590506126b08161268a565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126126db576126da6126b6565b5b8235905067ffffffffffffffff8111156126f8576126f76126bb565b5b602083019150836001820283011115612714576127136126c0565b5b9250929050565b60008060008060008060008060c0898b03121561273b5761273a612592565b5b60006127498b828c01612675565b985050602061275a8b828c01612675565b975050604061276b8b828c01612675565b965050606061277c8b828c016126a1565b955050608089013567ffffffffffffffff81111561279d5761279c612597565b5b6127a98b828c016126c5565b945094505060a089013567ffffffffffffffff8111156127cc576127cb612597565b5b6127d88b828c016126c5565b92509250509295985092959890939650565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61281f816127ea565b811461282a57600080fd5b50565b60008135905061283c81612816565b92915050565b60006020828403121561285857612857612592565b5b60006128668482850161282d565b91505092915050565b6128788161259c565b82525050565b6000602082019050612893600083018461286f565b92915050565b60006128a48261252c565b9050919050565b6128b481612899565b81146128bf57600080fd5b50565b6000813590506128d1816128ab565b92915050565b600080604083850312156128ee576128ed612592565b5b60006128fc858286016128c2565b925050602061290d858286016126a1565b9150509250929050565b60008083601f84011261292d5761292c6126b6565b5b8235905067ffffffffffffffff81111561294a576129496126bb565b5b602083019150836020820283011115612966576129656126c0565b5b9250929050565b6000806020838503121561298457612983612592565b5b600083013567ffffffffffffffff8111156129a2576129a1612597565b5b6129ae85828601612917565b92509250509250929050565b6000806000806000608086880312156129d6576129d5612592565b5b60006129e488828901612675565b95505060206129f588828901612675565b9450506040612a06888289016126a1565b935050606086013567ffffffffffffffff811115612a2757612a26612597565b5b612a33888289016126c5565b92509250509295509295909350565b612a4b816127ea565b82525050565b6000602082019050612a666000830184612a42565b92915050565b600080fd5b60006101608284031215612a8857612a87612a6c565b5b81905092915050565b6000819050919050565b612aa481612a91565b8114612aaf57600080fd5b50565b600081359050612ac181612a9b565b92915050565b600080600060608486031215612ae057612adf612592565b5b600084013567ffffffffffffffff811115612afe57612afd612597565b5b612b0a86828701612a71565b9350506020612b1b86828701612ab2565b9250506040612b2c868287016126a1565b9150509250925092565b60008083601f840112612b4c57612b4b6126b6565b5b8235905067ffffffffffffffff811115612b6957612b686126bb565b5b602083019150836020820283011115612b8557612b846126c0565b5b9250929050565b60008083601f840112612ba257612ba16126b6565b5b8235905067ffffffffffffffff811115612bbf57612bbe6126bb565b5b602083019150836020820283011115612bdb57612bda6126c0565b5b9250929050565b60008060008060008060608789031215612bff57612bfe612592565b5b600087013567ffffffffffffffff811115612c1d57612c1c612597565b5b612c2989828a01612917565b9650965050602087013567ffffffffffffffff811115612c4c57612c4b612597565b5b612c5889828a01612b36565b9450945050604087013567ffffffffffffffff811115612c7b57612c7a612597565b5b612c8789828a01612b8c565b92509250509295509295509295565b60008060408385031215612cad57612cac612592565b5b6000612cbb85828601612675565b9250506020612ccc85828601612675565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612d2482612cdb565b810181811067ffffffffffffffff82111715612d4357612d42612cec565b5b80604052505050565b6000612d56612588565b9050612d628282612d1b565b919050565b600067ffffffffffffffff821115612d8257612d81612cec565b5b612d8b82612cdb565b9050602081019050919050565b82818337600083830152505050565b6000612dba612db584612d67565b612d4c565b905082815260208101848484011115612dd657612dd5612cd6565b5b612de1848285612d98565b509392505050565b600082601f830112612dfe57612dfd6126b6565b5b8135612e0e848260208601612da7565b91505092915050565b60008060408385031215612e2e57612e2d612592565b5b6000612e3c85828601612675565b925050602083013567ffffffffffffffff811115612e5d57612e5c612597565b5b612e6985828601612de9565b9150509250929050565b612e7c81612a91565b82525050565b6000602082019050612e976000830184612e73565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612ed7578082015181840152602081019050612ebc565b60008484015250505050565b6000612eee82612e9d565b612ef88185612ea8565b9350612f08818560208601612eb9565b612f1181612cdb565b840191505092915050565b60006020820190508181036000830152612f368184612ee3565b905092915050565b6000819050919050565b6000612f63612f5e612f598461252c565b612f3e565b61252c565b9050919050565b6000612f7582612f48565b9050919050565b6000612f8782612f6a565b9050919050565b612f9781612f7c565b82525050565b6000602082019050612fb26000830184612f8e565b92915050565b60008060008060608587031215612fd257612fd1612592565b5b6000612fe087828801612675565b9450506020612ff1878288016126a1565b935050604085013567ffffffffffffffff81111561301257613011612597565b5b61301e878288016126c5565b925092505092959194509250565b60008060008060008060008060a0898b03121561304c5761304b612592565b5b600061305a8b828c01612675565b985050602061306b8b828c01612675565b975050604089013567ffffffffffffffff81111561308c5761308b612597565b5b6130988b828c01612b36565b9650965050606089013567ffffffffffffffff8111156130bb576130ba612597565b5b6130c78b828c01612b36565b9450945050608089013567ffffffffffffffff8111156130ea576130e9612597565b5b6130f68b828c016126c5565b92509250509295985092959890939650565b60008060008060008060a0878903121561312557613124612592565b5b600061313389828a01612675565b965050602061314489828a01612675565b955050604061315589828a016126a1565b945050606061316689828a016126a1565b935050608087013567ffffffffffffffff81111561318757613186612597565b5b61319389828a016126c5565b92509250509295509295509295565b6000602082840312156131b8576131b7612592565b5b60006131c684828501612675565b91505092915050565b600081905092915050565b50565b60006131ea6000836131cf565b91506131f5826131da565b600082019050919050565b600061320b826131dd565b9150819050919050565b600061322082612f6a565b9050919050565b61323081613215565b82525050565b600060408201905061324b6000830185613227565b613258602083018461260b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006132c882612601565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036132fa576132f961328e565b5b600182019050919050565b600081905092915050565b6000819050919050565b6133238161254c565b82525050565b6000613335838361331a565b60208301905092915050565b60006133506020840184612675565b905092915050565b6000602082019050919050565b60006133718385613305565b935061337c82613310565b8060005b858110156133b5576133928284613341565b61339c8882613329565b97506133a783613358565b925050600181019050613380565b5085925050509392505050565b60006133cf828486613365565b91508190509392505050565b7f77726f6e67206172726179206c656e6774687300000000000000000000000000600082015250565b6000613411601383612ea8565b915061341c826133db565b602082019050919050565b6000602082019050818103600083015261344081613404565b9050919050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261347357613472613447565b5b80840192508235915067ffffffffffffffff8211156134955761349461344c565b5b6020830192506001820236038313156134b1576134b0613451565b5b509250929050565b600082825260208201905092915050565b60006134d683856134b9565b93506134e3838584612d98565b6134ec83612cdb565b840190509392505050565b600060408201905081810360008301526135128185876134ca565b9050613521602083018461255e565b949350505050565b600067ffffffffffffffff82169050919050565b61354681613529565b82525050565b6000602082019050613561600083018461353d565b92915050565b61357081612899565b82525050565b600060408201905061358b6000830185613567565b613598602083018461260b565b9392505050565b6000815190506135ae8161268a565b92915050565b6000602082840312156135ca576135c9612592565b5b60006135d88482850161359f565b91505092915050565b6000819050919050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b600061362a613625613620846135e1565b612f3e565b6135eb565b9050919050565b61363a8161360f565b82525050565b6000604082019050613655600083018561255e565b6136626020830184613631565b9392505050565b7f436f6c6c6563746976655f5f4f6e6c79436f6c6c656374697665000000000000600082015250565b600061369f601a83612ea8565b91506136aa82613669565b602082019050919050565b600060208201905081810360008301526136ce81613692565b9050919050565b7f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000600082015250565b600061370b601c83612ea8565b9150613716826136d5565b602082019050919050565b6000602082019050818103600083015261373a816136fe565b9050919050565b600081519050919050565b600061375782613741565b61376181856131cf565b9350613771818560208601612eb9565b80840191505092915050565b6000613789828461374c565b915081905092915050565b6000815190506137a381612a9b565b92915050565b6000602082840312156137bf576137be612592565b5b60006137cd84828501613794565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060ff82169050919050565b61381b81613805565b82525050565b60006080820190506138366000830187612e73565b6138436020830186613812565b6138506040830185612e73565b61385d6060830184612e73565b9594505050505056fea26469706673582212203efe419716f4166dd7ef48757ae0ec20dc0f5c6f452a9a20b9707d71da6e7e7964736f6c63430008140033";

type NewCWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NewCWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NewCWallet__factory extends ContractFactory {
  constructor(...args: NewCWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    anEntryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(anEntryPoint, overrides || {});
  }
  override deploy(
    anEntryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(anEntryPoint, overrides || {}) as Promise<
      NewCWallet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NewCWallet__factory {
    return super.connect(runner) as NewCWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NewCWalletInterface {
    return new Interface(_abi) as NewCWalletInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NewCWallet {
    return new Contract(address, _abi, runner) as unknown as NewCWallet;
  }
}
