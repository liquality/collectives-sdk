/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  HoneyPot,
  HoneyPotInterface,
} from "../../../contracts/core/HoneyPot";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "HoneyPot__OnlyOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "HoneyPot__RewardFailedToSend",
    type: "error",
  },
  {
    inputs: [],
    name: "HoneyPot__TopContributorNotSet",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "RewardReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "topContributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardValue",
        type: "uint256",
      },
    ],
    name: "RewardSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "topContributor",
        type: "address",
      },
    ],
    name: "TopContributorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTopContributor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sendReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_topContributor",
        type: "address",
      },
    ],
    name: "setTopContributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b50620000556200005b60201b60201c565b620001cf565b60006200006d6200016560201b60201c565b90508060000160089054906101000a900460ff1615620000b9576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614620001625767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051620001599190620001b2565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600067ffffffffffffffff82169050919050565b620001ac816200018d565b82525050565b6000602082019050620001c96000830184620001a1565b92915050565b60805161181f620001f9600039600081816108ef015281816109440152610aff015261181f6000f3fe6080604052600436106100a05760003560e01c8063ad3cb1cc11610064578063ad3cb1cc14610183578063bb4cbeb7146101ae578063c4d66de8146101d7578063cf12f263146101f3578063e7f43c681461021e578063f2fde38b14610249576100de565b80631149a81a146100e35780634f1ef286146100fa57806352d1902d14610116578063715018a6146101415780638da5cb5b14610158576100de565b366100de577f562ff1d6fee77720385c79d29bef3c90c5a796b161826766d09a972bda104a3c346040516100d49190611224565b60405180910390a1005b600080fd5b3480156100ef57600080fd5b506100f8610272565b005b610114600480360381019061010f91906113f7565b61045b565b005b34801561012257600080fd5b5061012b61047a565b604051610138919061146c565b60405180910390f35b34801561014d57600080fd5b506101566104ad565b005b34801561016457600080fd5b5061016d6104c1565b60405161017a9190611496565b60405180910390f35b34801561018f57600080fd5b506101986104f9565b6040516101a59190611530565b60405180910390f35b3480156101ba57600080fd5b506101d560048036038101906101d09190611590565b610532565b005b6101f160048036038101906101ec91906115bd565b6105d4565b005b3480156101ff57600080fd5b506102086107a4565b6040516102159190611496565b60405180910390f35b34801561022a57600080fd5b506102336107cd565b6040516102409190611496565b60405180910390f35b34801561025557600080fd5b50610270600480360381019061026b91906115bd565b6107f7565b005b61027a61087d565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610300576040517fd436b89300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161034c9061161b565b60006040518083038185875af1925050503d8060008114610389576040519150601f19603f3d011682016040523d82523d6000602084013e61038e565b606091505b50509050806103f65760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826040517f9e4313cd0000000000000000000000000000000000000000000000000000000081526004016103ed92919061168f565b60405180910390fd5b7f6177f4110771217c72937d51f3a73915f2c714a6b98507e17eea7a186136a24a60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360405161044792919061168f565b60405180910390a150506104596108d4565b565b6104636108ed565b61046c826109d3565b61047682826109de565b5050565b6000610484610afd565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b6104b5610b84565b6104bf6000610c0b565b565b6000806104cc610ce2565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b61053a610d0a565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb21318aa7ec34aab0959496e57933756a720d035e671895e32df0308d416074460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516105c991906116b8565b60405180910390a150565b60006105de610d83565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561062c5750825b9050600060018367ffffffffffffffff16148015610661575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561066f575080155b156106a6576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156106f65760018560000160086101000a81548160ff0219169083151502179055505b6106ff33610dab565b85600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550831561079c5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516107939190611722565b60405180910390a15b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107ff610b84565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108715760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108689190611496565b60405180910390fd5b61087a81610c0b565b50565b6000610887610dbf565b905060028160000154036108c7576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002816000018190555050565b60006108de610dbf565b90506001816000018190555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061099a57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610981610de7565b73ffffffffffffffffffffffffffffffffffffffff1614155b156109d1576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6109db610d0a565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a4657506040513d601f19601f82011682018060405250810190610a439190611769565b60015b610a8757816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610a7e9190611496565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114610aee57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610ae5919061146c565b60405180910390fd5b610af88383610e3e565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610b82576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610b8c610eb1565b73ffffffffffffffffffffffffffffffffffffffff16610baa6104c1565b73ffffffffffffffffffffffffffffffffffffffff1614610c0957610bcd610eb1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c009190611496565b60405180910390fd5b565b6000610c15610ce2565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b3373ffffffffffffffffffffffffffffffffffffffff16610d296107cd565b73ffffffffffffffffffffffffffffffffffffffff1614610d8157336040517fa31b6ae6000000000000000000000000000000000000000000000000000000008152600401610d789190611496565b60405180910390fd5b565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b610db3610eb9565b610dbc81610ef9565b50565b60007f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b6000610e157f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610f7f565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610e4782610f89565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115610ea457610e9e8282611056565b50610ead565b610eac6110da565b5b5050565b600033905090565b610ec1611117565b610ef7576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610f01610eb9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f735760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f6a9190611496565b60405180910390fd5b610f7c81610c0b565b50565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03610fe557806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610fdc9190611496565b60405180910390fd5b806110127f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610f7f565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161108091906117d2565b600060405180830381855af49150503d80600081146110bb576040519150601f19603f3d011682016040523d82523d6000602084013e6110c0565b606091505b50915091506110d0858383611137565b9250505092915050565b6000341115611115576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611121610d83565b60000160089054906101000a900460ff16905090565b60608261114c57611147826111c6565b6111be565b60008251148015611174575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156111b657836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016111ad9190611496565b60405180910390fd5b8190506111bf565b5b9392505050565b6000815111156111d95780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819050919050565b61121e8161120b565b82525050565b60006020820190506112396000830184611215565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061127e82611253565b9050919050565b61128e81611273565b811461129957600080fd5b50565b6000813590506112ab81611285565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611304826112bb565b810181811067ffffffffffffffff82111715611323576113226112cc565b5b80604052505050565b600061133661123f565b905061134282826112fb565b919050565b600067ffffffffffffffff821115611362576113616112cc565b5b61136b826112bb565b9050602081019050919050565b82818337600083830152505050565b600061139a61139584611347565b61132c565b9050828152602081018484840111156113b6576113b56112b6565b5b6113c1848285611378565b509392505050565b600082601f8301126113de576113dd6112b1565b5b81356113ee848260208601611387565b91505092915050565b6000806040838503121561140e5761140d611249565b5b600061141c8582860161129c565b925050602083013567ffffffffffffffff81111561143d5761143c61124e565b5b611449858286016113c9565b9150509250929050565b6000819050919050565b61146681611453565b82525050565b6000602082019050611481600083018461145d565b92915050565b61149081611273565b82525050565b60006020820190506114ab6000830184611487565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114eb5780820151818401526020810190506114d0565b60008484015250505050565b6000611502826114b1565b61150c81856114bc565b935061151c8185602086016114cd565b611525816112bb565b840191505092915050565b6000602082019050818103600083015261154a81846114f7565b905092915050565b600061155d82611253565b9050919050565b61156d81611552565b811461157857600080fd5b50565b60008135905061158a81611564565b92915050565b6000602082840312156115a6576115a5611249565b5b60006115b48482850161157b565b91505092915050565b6000602082840312156115d3576115d2611249565b5b60006115e18482850161129c565b91505092915050565b600081905092915050565b50565b60006116056000836115ea565b9150611610826115f5565b600082019050919050565b6000611626826115f8565b9150819050919050565b6000819050919050565b600061165561165061164b84611253565b611630565b611253565b9050919050565b60006116678261163a565b9050919050565b60006116798261165c565b9050919050565b6116898161166e565b82525050565b60006040820190506116a46000830185611680565b6116b16020830184611215565b9392505050565b60006020820190506116cd6000830184611680565b92915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061170c611707611702846116d3565b611630565b6116dd565b9050919050565b61171c816116f1565b82525050565b60006020820190506117376000830184611713565b92915050565b61174681611453565b811461175157600080fd5b50565b6000815190506117638161173d565b92915050565b60006020828403121561177f5761177e611249565b5b600061178d84828501611754565b91505092915050565b600081519050919050565b60006117ac82611796565b6117b681856115ea565b93506117c68185602086016114cd565b80840191505092915050565b60006117de82846117a1565b91508190509291505056fea264697066735822122015f44bb9ffabfda64153abc001fb74f9cf3bbbc7c115f3b3f55335426c4c6fec64736f6c63430008140033";

type HoneyPotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HoneyPotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HoneyPot__factory extends ContractFactory {
  constructor(...args: HoneyPotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HoneyPot & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HoneyPot__factory {
    return super.connect(runner) as HoneyPot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HoneyPotInterface {
    return new Interface(_abi) as HoneyPotInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): HoneyPot {
    return new Contract(address, _abi, runner) as unknown as HoneyPot;
  }
}
