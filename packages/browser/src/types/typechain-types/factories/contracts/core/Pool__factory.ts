/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Pool, PoolInterface } from "../../../contracts/core/Pool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Pool__FailedToWithdrawFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "Pool__NoRewardToDistribute",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "Pool__ZeroParticipation",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amountPaid",
        type: "uint256",
      },
    ],
    name: "NewMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "NewParticipant",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithrawnToCollective",
    type: "event",
  },
  {
    inputs: [],
    name: "collective",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getParticipants",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getParticipantsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolInfo",
    outputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDistributed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalContributions",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isRewardReceived",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_isDistributed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDistributed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPoolActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isRewardReceived",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "participantData",
    outputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "contribution",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "rewardedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardAvailable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolInitiator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_participant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountPaid",
        type: "uint256",
      },
    ],
    name: "recordMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardDistributed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalContributions",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_participant",
        type: "address",
      },
    ],
    name: "withdrawReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200239b3803806200239b833981810160405281019062000037919062000166565b60008060006101000a81548160ff021916908315150217905550600180819055508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250503373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050620001ad565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200012e8262000101565b9050919050565b620001408162000121565b81146200014c57600080fd5b50565b600081519050620001608162000135565b92915050565b6000806040838503121562000180576200017f620000fc565b5b600062000190858286016200014f565b9250506020620001a3858286016200014f565b9150509250929050565b60805160a05160c05161216362000238600039600081816109370152610a08015260008181610140015281816105b60152818161069f01528181610737015281816107c701528181610856015281816108d101528181610a97015281816111fc0152818161157b015281816116a50152818161172e01526117a70152600061155101526121636000f3fe6080604052600436106101395760003560e01c80638b3d3589116100ab578063e0bfb2a21161006f578063e0bfb2a2146104b6578063e6259ec7146104df578063e9483ac01461050a578063f4f3b20014610535578063f677cf0d1461055e578063fef10b951461058957610227565b80638b3d3589146103f55780638f73c5ae14610420578063b86e321c14610437578063cabfaa1814610460578063df868ed31461048b57610227565b806350431ce4116100fd57806350431ce41461031657806355a373d61461032d5780635aa68ac0146103585780635c975abb1461038357806360246c88146103ae5780638456cb59146103de57610227565b80630479734f1461022c57806335c1d3491461025757806337c0892314610294578063387d5f77146102bf5780633f4ba83a146102ff57610227565b36610227577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036101fb576001600660116101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f9ac954606f877c9c9e6deec30e9265abff5a57c7123a34777ca9321eb6c26d8e346040516101f291906119db565b60405180910390a25b346fffffffffffffffffffffffffffffffff166004600082825461021f9190611a25565b925050819055005b600080fd5b34801561023857600080fd5b506102416105b4565b60405161024e9190611a9a565b60405180910390f35b34801561026357600080fd5b5061027e60048036038101906102799190611ae6565b6105d8565b60405161028b9190611a9a565b60405180910390f35b3480156102a057600080fd5b506102a9610617565b6040516102b69190611b3e565b60405180910390f35b3480156102cb57600080fd5b506102e660048036038101906102e19190611b85565b610639565b6040516102f69493929190611bd5565b60405180910390f35b34801561030b57600080fd5b5061031461069d565b005b34801561032257600080fd5b5061032b610735565b005b34801561033957600080fd5b50610342610935565b60405161034f9190611a9a565b60405180910390f35b34801561036457600080fd5b5061036d610959565b60405161037a9190611cd8565b60405180910390f35b34801561038f57600080fd5b506103986109e7565b6040516103a59190611d15565b60405180910390f35b3480156103ba57600080fd5b506103c36109fd565b6040516103d596959493929190611d30565b60405180910390f35b3480156103ea57600080fd5b506103f3610a95565b005b34801561040157600080fd5b5061040a610b2d565b6040516104179190611d15565b60405180910390f35b34801561042c57600080fd5b50610435610b40565b005b34801561044357600080fd5b5061045e60048036038101906104599190611b85565b610f42565b005b34801561046c57600080fd5b506104756111de565b60405161048291906119db565b60405180910390f35b34801561049757600080fd5b506104a06111eb565b6040516104ad9190611d15565b60405180910390f35b3480156104c257600080fd5b506104dd60048036038101906104d89190611d91565b6111fa565b005b3480156104eb57600080fd5b506104f461154f565b6040516105019190611a9a565b60405180910390f35b34801561051657600080fd5b5061051f611573565b60405161052c91906119db565b60405180910390f35b34801561054157600080fd5b5061055c60048036038101906105579190611b85565b611579565b005b34801561056a57600080fd5b5061057361180d565b6040516105809190611d15565b60405180910390f35b34801561059557600080fd5b5061059e611820565b6040516105ab91906119db565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600381815481106105e857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a90046fffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900467ffffffffffffffff16908060010154908060020154905084565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461072b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072290611e7b565b60405180910390fd5b610733611826565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba90611e7b565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080990611ecc565b60006040518083038185875af1925050503d8060008114610846576040519150601f19603f3d011682016040523d82523d6000602084013e61084b565b606091505b50509050806108b6577f00000000000000000000000000000000000000000000000000000000000000006000476040517fcaef5d720000000000000000000000000000000000000000000000000000000081526004016108ad93929190611ee1565b60405180910390fd5b47600073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f0bbda60c71985b70bc6d0845c5020e421b5923b1dea81d037e7e1b53815cc35360405160405180910390a450565b7f000000000000000000000000000000000000000000000000000000000000000081565b606060038054806020026020016040519081016040528092919081815260200182805480156109dd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610993575b5050505050905090565b60008060009054906101000a900460ff16905090565b6000806000806000807f0000000000000000000000000000000000000000000000000000000000000000600454600554600660009054906101000a90046fffffffffffffffffffffffffffffffff16600660119054906101000a900460ff16600660109054906101000a900460ff16826fffffffffffffffffffffffffffffffff169250955095509550955095509550909192939495565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1a90611e7b565b60405180910390fd5b610b2b611888565b565b600660119054906101000a900460ff1681565b600660109054906101000a900460ff1680610b685750600660119054906101000a900460ff16155b80610b7557506000600454145b15610bac576040517f79ded14800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600454905060005b600380549050811015610f235760006002600060038481548110610bdd57610bdc611f18565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015481526020016002820154815250509050600660009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1683826020015167ffffffffffffffff16610d369190611f47565b610d409190611fb8565b6002600060038581548110610d5857610d57611f18565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506002600060038481548110610ddc57610ddb611f18565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546002600060038581548110610e5d57610e5c611f18565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055508060400151816000015173ffffffffffffffffffffffffffffffffffffffff167fe34918ff1c7084970068b53fd71ad6d8b04e9f15d3886cbf006443e6cdc52ea660405160405180910390a3818060010192505050610bb6565b506001600660106101000a81548160ff02191690831515021790555050565b610f4a6118ea565b600073ffffffffffffffffffffffffffffffffffffffff16600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361101d57806040517fdff56a7e0000000000000000000000000000000000000000000000000000000081526004016110149190611a9a565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015490506000810361107257506111d3565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555060008273ffffffffffffffffffffffffffffffffffffffff16826040516110e090611ecc565b60006040518083038185875af1925050503d806000811461111d576040519150601f19603f3d011682016040523d82523d6000602084013e611122565b606091505b50509050806111735781600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055505b81600560008282546111859190611a25565b92505081905550818373ffffffffffffffffffffffffffffffffffffffff167f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e133760405160405180910390a350505b6111db611930565b50565b6000600380549050905090565b60006111f56109e7565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127f90611e7b565b60405180910390fd5b611290611939565b81600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160148282829054906101000a900467ffffffffffffffff166112f59190611fe9565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555081600660008282829054906101000a90046fffffffffffffffffffffffffffffffff166113489190612025565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff16600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036114f95783600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80838573ffffffffffffffffffffffffffffffffffffffff167fd62b31eefe6c3d4a9d7549980474d9ee9037099495465c84b0aa2278d7d905898560405161154191906119db565b60405180910390a450505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115fe90611e7b565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116429190611a9a565b602060405180830381865afa15801561165f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611683919061207e565b905060008273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b81526004016116e29291906120ab565b6020604051808303816000875af1158015611701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117259190612100565b90508061178d577f000000000000000000000000000000000000000000000000000000000000000083836040517fcaef5d7200000000000000000000000000000000000000000000000000000000815260040161178493929190611ee1565b60405180910390fd5b818373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f0bbda60c71985b70bc6d0845c5020e421b5923b1dea81d037e7e1b53815cc35360405160405180910390a4505050565b600660109054906101000a900460ff1681565b60045481565b61182e61197a565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6118716119ba565b60405161187e9190611a9a565b60405180910390a1565b611890611939565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118d36119ba565b6040516118e09190611a9a565b60405180910390a1565b600260015403611926576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b6119416109e7565b15611978576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6119826109e7565b6119b8576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600033905090565b6000819050919050565b6119d5816119c2565b82525050565b60006020820190506119f060008301846119cc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a30826119c2565b9150611a3b836119c2565b9250828201905080821115611a5357611a526119f6565b5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a8482611a59565b9050919050565b611a9481611a79565b82525050565b6000602082019050611aaf6000830184611a8b565b92915050565b600080fd5b611ac3816119c2565b8114611ace57600080fd5b50565b600081359050611ae081611aba565b92915050565b600060208284031215611afc57611afb611ab5565b5b6000611b0a84828501611ad1565b91505092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b611b3881611b13565b82525050565b6000602082019050611b536000830184611b2f565b92915050565b611b6281611a79565b8114611b6d57600080fd5b50565b600081359050611b7f81611b59565b92915050565b600060208284031215611b9b57611b9a611ab5565b5b6000611ba984828501611b70565b91505092915050565b600067ffffffffffffffff82169050919050565b611bcf81611bb2565b82525050565b6000608082019050611bea6000830187611a8b565b611bf76020830186611bc6565b611c0460408301856119cc565b611c1160608301846119cc565b95945050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611c4f81611a79565b82525050565b6000611c618383611c46565b60208301905092915050565b6000602082019050919050565b6000611c8582611c1a565b611c8f8185611c25565b9350611c9a83611c36565b8060005b83811015611ccb578151611cb28882611c55565b9750611cbd83611c6d565b925050600181019050611c9e565b5085935050505092915050565b60006020820190508181036000830152611cf28184611c7a565b905092915050565b60008115159050919050565b611d0f81611cfa565b82525050565b6000602082019050611d2a6000830184611d06565b92915050565b600060c082019050611d456000830189611a8b565b611d5260208301886119cc565b611d5f60408301876119cc565b611d6c60608301866119cc565b611d796080830185611d06565b611d8660a0830184611d06565b979650505050505050565b60008060008060808587031215611dab57611daa611ab5565b5b6000611db987828801611b70565b9450506020611dca87828801611ad1565b9350506040611ddb87828801611ad1565b9250506060611dec87828801611ad1565b91505092959194509250565b600082825260208201905092915050565b7f506f6f6c5f5f417574686f72697a6174696f6e3a4f6e6c79436f6c6c6563746960008201527f7665000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e65602283611df8565b9150611e7082611e09565b604082019050919050565b60006020820190508181036000830152611e9481611e58565b9050919050565b600081905092915050565b50565b6000611eb6600083611e9b565b9150611ec182611ea6565b600082019050919050565b6000611ed782611ea9565b9150819050919050565b6000606082019050611ef66000830186611a8b565b611f036020830185611a8b565b611f1060408301846119cc565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611f52826119c2565b9150611f5d836119c2565b9250828202611f6b816119c2565b91508282048414831517611f8257611f816119f6565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611fc3826119c2565b9150611fce836119c2565b925082611fde57611fdd611f89565b5b828204905092915050565b6000611ff482611bb2565b9150611fff83611bb2565b9250828201905067ffffffffffffffff81111561201f5761201e6119f6565b5b92915050565b600061203082611b13565b915061203b83611b13565b925082820190506fffffffffffffffffffffffffffffffff811115612063576120626119f6565b5b92915050565b60008151905061207881611aba565b92915050565b60006020828403121561209457612093611ab5565b5b60006120a284828501612069565b91505092915050565b60006040820190506120c06000830185611a8b565b6120cd60208301846119cc565b9392505050565b6120dd81611cfa565b81146120e857600080fd5b50565b6000815190506120fa816120d4565b92915050565b60006020828403121561211657612115611ab5565b5b6000612124848285016120eb565b9150509291505056fea26469706673582212200650faa43ccc7368024d7370b652572607a901644036416c15f2168e05d3e6f264736f6c63430008140033";

type PoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pool__factory extends ContractFactory {
  constructor(...args: PoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenContract: AddressLike,
    _initiator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _tokenContract,
      _initiator,
      overrides || {}
    );
  }
  override deploy(
    _tokenContract: AddressLike,
    _initiator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tokenContract, _initiator, overrides || {}) as Promise<
      Pool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Pool__factory {
    return super.connect(runner) as Pool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolInterface {
    return new Interface(_abi) as PoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Pool {
    return new Contract(address, _abi, runner) as unknown as Pool;
  }
}
